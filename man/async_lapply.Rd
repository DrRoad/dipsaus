% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallels.R
\name{async_lapply}
\alias{async_lapply}
\title{Apply to each element in parallel with callbacks}
\usage{
async_lapply(x, fun, ..., .ncores = future::availableCores(),
  .call_back = NULL, .packages = NULL, .envir = environment(),
  .globals = TRUE, .gc = TRUE, .as_datatable = FALSE, .nrows = 0)
}
\arguments{
\item{x}{vectors or lists to apply}

\item{fun}{function to apply on \code{x}}

\item{...}{further arguments passing to \code{fun}}

\item{.ncores}{number of cores to use}

\item{.call_back}{\code{NULL} or function that will execute at the beginning
of each loop}

\item{.packages}{packages to use}

\item{.envir}{environment to evaluate}

\item{.globals, .gc}{see \code{future::future}}

\item{.as_datatable}{return a data frame instead of list? Default is \code{FALSE}}

\item{.nrows}{if \code{.as_datatable} is true, what's the number of rows of the result}
}
\description{
Apply to each element in parallel with callbacks
}
\examples{

\donttest{
# Takes about 15 seconds to run
library(dipsaus)

# Make a forked clusters
make_forked_clusters()

async_lapply(11:20, function(x){
  Sys.sleep(3)
  return(x)
}, .call_back = function(i){
  # Callback is not async
  print(sprintf('Iteration \%d', i))
})
}
}
