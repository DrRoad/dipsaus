% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallels.R
\name{async_expr}
\alias{async_expr}
\title{Apply R expressions in a parallel way}
\usage{
async_expr(.X, .expr, .varname = "x", envir = parent.frame(),
  .pre_run = NULL, .ncore = future::availableCores(), ...)
}
\arguments{
\item{.X}{a vector or a list to apply evaluation on}

\item{.expr}{R expression, unquoted}

\item{.varname}{variable name representing element of each \code{.X}}

\item{envir}{environment to evaluate expressions}

\item{.pre_run}{expressions to be evaluated before looping.}

\item{.ncore}{number of CPU cores}

\item{...}{passed to \code{future::future}}
}
\description{
Apply R expressions in a parallel way
}
\examples{

\donttest{
\dontrun{
# Takes about 15 seconds to run
library(dipsaus)
async_expr(.X = 1:10, {
# each element of .X is assigned as 'x'

# This part is not async
print(x)

# The magic starts here, async is provided
async({
  Sys.sleep(3)
  return(x*2)
})
}, .pre_run = {
  make_forked_clusters()
})
}
}

}
